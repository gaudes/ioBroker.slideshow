{
  "version": 3,
  "sources": ["../../src/lib/tools.ts"],
  "sourcesContent": ["import axios from \"axios\";\r\n\r\n/**\r\n * Tests whether the given variable is a real object and not an Array\r\n * @param it The variable to test\r\n */\r\nexport function isObject(it: unknown): it is Record<string, any> {\r\n\t// This is necessary because:\r\n\t// typeof null === 'object'\r\n\t// typeof [] === 'object'\r\n\t// [] instanceof Object === true\r\n\treturn Object.prototype.toString.call(it) === \"[object Object]\";\r\n}\r\n\r\n/**\r\n * Tests whether the given variable is really an Array\r\n * @param it The variable to test\r\n */\r\nexport function isArray(it: unknown): it is any[] {\r\n\tif (Array.isArray != null) return Array.isArray(it);\r\n\treturn Object.prototype.toString.call(it) === \"[object Array]\";\r\n}\r\n\r\n/**\r\n * Translates text using the Google Translate API\r\n * @param text The text to translate\r\n * @param targetLang The target languate\r\n * @param yandexApiKey The yandex API key. You can create one for free at https://translate.yandex.com/developers\r\n */\r\nexport async function translateText(text: string, targetLang: string, yandexApiKey?: string): Promise<string> {\r\n\tif (targetLang === \"en\") {\r\n\t\treturn text;\r\n\t} else if (!text) {\r\n\t\treturn \"\";\r\n\t}\r\n\tif (yandexApiKey) {\r\n\t\treturn translateYandex(text, targetLang, yandexApiKey);\r\n\t} else {\r\n\t\treturn translateGoogle(text, targetLang);\r\n\t}\r\n}\r\n\r\n/**\r\n * Translates text with Yandex API\r\n * @param text The text to translate\r\n * @param targetLang The target languate\r\n * @param apiKey The yandex API key. You can create one for free at https://translate.yandex.com/developers\r\n */\r\nasync function translateYandex(text: string, targetLang: string, apiKey: string): Promise<string> {\r\n\tif (targetLang === \"zh-cn\") {\r\n\t\ttargetLang = \"zh\";\r\n\t}\r\n\ttry {\r\n\t\tconst url = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${apiKey}&text=${encodeURIComponent(text)}&lang=en-${targetLang}`;\r\n\t\tconst response = await axios.get<any>(url,{timeout: 15000});\r\n\t\tif (isArray(response.data?.text)) {\r\n\t\t\treturn response.data.text[0];\r\n\t\t}\r\n\t\tthrow new Error(\"Invalid response for translate request\");\r\n\t} catch (e: any) {\r\n\t\tthrow new Error(`Could not translate to \"${targetLang}\": ${e}`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Translates text with Google API\r\n * @param text The text to translate\r\n * @param targetLang The target languate\r\n */\r\nasync function translateGoogle(text: string, targetLang: string): Promise<string> {\r\n\ttry {\r\n\t\tconst url = `http://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}&ie=UTF-8&oe=UTF-8`;\r\n\t\tconst response = await axios.get<any>(url, {timeout: 15000});\r\n\t\tif (isArray(response.data)) {\r\n\t\t\t// we got a valid response\r\n\t\t\treturn response.data[0][0][0];\r\n\t\t}\r\n\t\tthrow new Error(\"Invalid response for translate request\");\r\n\t} catch (e: any) {\r\n\t\tif (e.response?.status === 429) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Could not translate to \"${targetLang}\": Rate-limited by Google Translate`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthrow new Error(`Could not translate to \"${targetLang}\": ${e}`);\r\n\t\t}\r\n\t}\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAMX,kBAAkB,IAAwC;AAKhE,SAAO,OAAO,UAAU,SAAS,KAAK,QAAQ;AAAA;AAOxC,iBAAiB,IAA0B;AACjD,MAAI,MAAM,WAAW;AAAM,WAAO,MAAM,QAAQ;AAChD,SAAO,OAAO,UAAU,SAAS,KAAK,QAAQ;AAAA;AAS/C,6BAAoC,MAAc,YAAoB,cAAwC;AAC7G,MAAI,eAAe,MAAM;AACxB,WAAO;AAAA,aACG,CAAC,MAAM;AACjB,WAAO;AAAA;AAER,MAAI,cAAc;AACjB,WAAO,gBAAgB,MAAM,YAAY;AAAA,SACnC;AACN,WAAO,gBAAgB,MAAM;AAAA;AAAA;AAU/B,+BAA+B,MAAc,YAAoB,QAAiC;AAhDlG;AAiDC,MAAI,eAAe,SAAS;AAC3B,iBAAa;AAAA;AAEd,MAAI;AACH,UAAM,MAAM,+DAA+D,eAAe,mBAAmB,iBAAiB;AAC9H,UAAM,WAAW,MAAM,qBAAM,IAAS,KAAI,EAAC,SAAS;AACpD,QAAI,QAAQ,eAAS,SAAT,mBAAe,OAAO;AACjC,aAAO,SAAS,KAAK,KAAK;AAAA;AAE3B,UAAM,IAAI,MAAM;AAAA,WACR,GAAP;AACD,UAAM,IAAI,MAAM,2BAA2B,gBAAgB;AAAA;AAAA;AAS7D,+BAA+B,MAAc,YAAqC;AArElF;AAsEC,MAAI;AACH,UAAM,MAAM,0EAA0E,qBAAqB,mBAAmB;AAC9H,UAAM,WAAW,MAAM,qBAAM,IAAS,KAAK,EAAC,SAAS;AACrD,QAAI,QAAQ,SAAS,OAAO;AAE3B,aAAO,SAAS,KAAK,GAAG,GAAG;AAAA;AAE5B,UAAM,IAAI,MAAM;AAAA,WACR,GAAP;AACD,QAAI,SAAE,aAAF,mBAAY,YAAW,KAAK;AAC/B,YAAM,IAAI,MACT,2BAA2B;AAAA,WAEtB;AACN,YAAM,IAAI,MAAM,2BAA2B,gBAAgB;AAAA;AAAA;AAAA;",
  "names": []
}
