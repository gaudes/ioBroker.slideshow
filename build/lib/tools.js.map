{
  "version": 3,
  "sources": ["../../src/lib/tools.ts"],
  "sourcesContent": ["import axios from \"axios\";\n\n/**\n * Tests whether the given variable is a real object and not an Array\n * @param it The variable to test\n */\nexport function isObject(it: unknown): it is Record<string, any> {\n\t// This is necessary because:\n\t// typeof null === 'object'\n\t// typeof [] === 'object'\n\t// [] instanceof Object === true\n\treturn Object.prototype.toString.call(it) === \"[object Object]\";\n}\n\n/**\n * Tests whether the given variable is really an Array\n * @param it The variable to test\n */\nexport function isArray(it: unknown): it is any[] {\n\tif (Array.isArray != null) return Array.isArray(it);\n\treturn Object.prototype.toString.call(it) === \"[object Array]\";\n}\n\n/**\n * Translates text using the Google Translate API\n * @param text The text to translate\n * @param targetLang The target languate\n * @param yandexApiKey The yandex API key. You can create one for free at https://translate.yandex.com/developers\n */\nexport async function translateText(text: string, targetLang: string, yandexApiKey?: string): Promise<string> {\n\tif (targetLang === \"en\") {\n\t\treturn text;\n\t} else if (!text) {\n\t\treturn \"\";\n\t}\n\tif (yandexApiKey) {\n\t\treturn translateYandex(text, targetLang, yandexApiKey);\n\t} else {\n\t\treturn translateGoogle(text, targetLang);\n\t}\n}\n\n/**\n * Translates text with Yandex API\n * @param text The text to translate\n * @param targetLang The target languate\n * @param apiKey The yandex API key. You can create one for free at https://translate.yandex.com/developers\n */\nasync function translateYandex(text: string, targetLang: string, apiKey: string): Promise<string> {\n\tif (targetLang === \"zh-cn\") {\n\t\ttargetLang = \"zh\";\n\t}\n\ttry {\n\t\tconst url = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${apiKey}&text=${encodeURIComponent(text)}&lang=en-${targetLang}`;\n\t\tconst response = await axios.get<any>(url,{timeout: 15000});\n\t\tif (isArray(response.data?.text)) {\n\t\t\treturn response.data.text[0];\n\t\t}\n\t\tthrow new Error(\"Invalid response for translate request\");\n\t} catch (e: any) {\n\t\tthrow new Error(`Could not translate to \"${targetLang}\": ${e}`);\n\t}\n}\n\n/**\n * Translates text with Google API\n * @param text The text to translate\n * @param targetLang The target languate\n */\nasync function translateGoogle(text: string, targetLang: string): Promise<string> {\n\ttry {\n\t\tconst url = `http://translate.googleapis.com/translate_a/single?client=gtx&sl=en&tl=${targetLang}&dt=t&q=${encodeURIComponent(text)}&ie=UTF-8&oe=UTF-8`;\n\t\tconst response = await axios.get<any>(url, {timeout: 15000});\n\t\tif (isArray(response.data)) {\n\t\t\t// we got a valid response\n\t\t\treturn response.data[0][0][0];\n\t\t}\n\t\tthrow new Error(\"Invalid response for translate request\");\n\t} catch (e: any) {\n\t\tif (e.response?.status === 429) {\n\t\t\tthrow new Error(\n\t\t\t\t`Could not translate to \"${targetLang}\": Rate-limited by Google Translate`\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(`Could not translate to \"${targetLang}\": ${e}`);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAMX,SAAS,SAAS,IAAwC;AAKhE,SAAO,OAAO,UAAU,SAAS,KAAK,EAAE,MAAM;AAC/C;AAMO,SAAS,QAAQ,IAA0B;AACjD,MAAI,MAAM,WAAW;AAAM,WAAO,MAAM,QAAQ,EAAE;AAClD,SAAO,OAAO,UAAU,SAAS,KAAK,EAAE,MAAM;AAC/C;AAQA,eAAsB,cAAc,MAAc,YAAoB,cAAwC;AAC7G,MAAI,eAAe,MAAM;AACxB,WAAO;AAAA,EACR,WAAW,CAAC,MAAM;AACjB,WAAO;AAAA,EACR;AACA,MAAI,cAAc;AACjB,WAAO,gBAAgB,MAAM,YAAY,YAAY;AAAA,EACtD,OAAO;AACN,WAAO,gBAAgB,MAAM,UAAU;AAAA,EACxC;AACD;AAQA,eAAe,gBAAgB,MAAc,YAAoB,QAAiC;AAhDlG;AAiDC,MAAI,eAAe,SAAS;AAC3B,iBAAa;AAAA,EACd;AACA,MAAI;AACH,UAAM,MAAM,+DAA+D,MAAM,SAAS,mBAAmB,IAAI,CAAC,YAAY,UAAU;AACxI,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAS,KAAI,EAAC,SAAS,KAAK,CAAC;AAC1D,QAAI,SAAQ,cAAS,SAAT,mBAAe,IAAI,GAAG;AACjC,aAAO,SAAS,KAAK,KAAK,CAAC;AAAA,IAC5B;AACA,UAAM,IAAI,MAAM,wCAAwC;AAAA,EACzD,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,2BAA2B,UAAU,MAAM,CAAC,EAAE;AAAA,EAC/D;AACD;AAOA,eAAe,gBAAgB,MAAc,YAAqC;AArElF;AAsEC,MAAI;AACH,UAAM,MAAM,0EAA0E,UAAU,WAAW,mBAAmB,IAAI,CAAC;AACnI,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAS,KAAK,EAAC,SAAS,KAAK,CAAC;AAC3D,QAAI,QAAQ,SAAS,IAAI,GAAG;AAE3B,aAAO,SAAS,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC;AAAA,IAC7B;AACA,UAAM,IAAI,MAAM,wCAAwC;AAAA,EACzD,SAAS,GAAQ;AAChB,UAAI,OAAE,aAAF,mBAAY,YAAW,KAAK;AAC/B,YAAM,IAAI;AAAA,QACT,2BAA2B,UAAU;AAAA,MACtC;AAAA,IACD,OAAO;AACN,YAAM,IAAI,MAAM,2BAA2B,UAAU,MAAM,CAAC,EAAE;AAAA,IAC/D;AAAA,EACD;AACD;",
  "names": ["axios"]
}
