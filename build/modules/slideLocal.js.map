{
  "version": 3,
  "sources": ["../../src/modules/slideLocal.ts"],
  "sourcesContent": ["import { GlobalHelper } from \"./global-helper\";\r\nimport { getPictureInformation } from \"./exif\"\r\nimport * as nominatim from \"./nominatim\"\r\n\r\nexport interface LocalPicture{\r\n\turl: string,\r\n\tpath: string,\r\n\tinfo1: string,\r\n\tinfo2: string,\r\n\tinfo3: string,\r\n\tdate: Date | null,\r\n\tlatitude: number | null,\r\n\tlongitude: number | null,\r\n\tlocationInfos: nominatim.locationInfos | null\r\n}\r\n\r\nexport interface LocalPictureListUpdateResult{\r\n\tsuccess: boolean;\r\n\tpicturecount: number;\r\n}\r\n\r\nlet CurrentImages: LocalPicture[];\r\nlet CurrentImage: LocalPicture;\r\n\r\nexport async function getPicture(Helper: GlobalHelper): Promise<LocalPicture | null> {\r\n\ttry{\r\n\t\tif (CurrentImages.length === 0){\r\n\t\t\tawait updatePictureList(Helper);\r\n\t\t}\r\n\t\tif (CurrentImages.length !== 0){\r\n\t\t\tif (!CurrentImage){\r\n\t\t\t\tCurrentImage = CurrentImages[0];\r\n\t\t\t} else {\r\n\t\t\t\tif (CurrentImages.indexOf(CurrentImage) === CurrentImages.length - 1){\r\n\t\t\t\t\tCurrentImage = CurrentImages[0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tCurrentImage = CurrentImages[CurrentImages.indexOf(CurrentImage) + 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn CurrentImage;\r\n\t\t}\r\n\t\treturn null;\r\n\t}catch(err){\r\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Local\", \"getPicture\");\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport async function updatePictureList(Helper: GlobalHelper): Promise<LocalPictureListUpdateResult> {\r\n\ttry{\r\n\t\tCurrentImages = [];\r\n\t\tconst CurrentImageFiles = await (Helper.Adapter.readDirAsync(\"vis.0\", \"/slideshow\"));\r\n\t\tif (!(CurrentImageFiles.length > 0)){\r\n\t\t\tHelper.ReportingError(null, \"No pictures found in folder\", \"Local\", \"updatePictureList/List\",\"\", false);\r\n\t\t\treturn { success: false, picturecount: 0};\r\n\t\t} else {\r\n\t\t\tawait Promise.all(CurrentImageFiles.map(async file => {\r\n\t\t\t\tconst CurrentImageFile = await Helper.Adapter.readFileAsync(\"vis.0\", `/slideshow/${file.file}`);\r\n\t\t\t\tconst fileInfo = await getPictureInformation(Helper, CurrentImageFile.file);\r\n\t\t\t\tlet info1, info2, info3 = \"\";\r\n\t\t\t\tlet date = null;\r\n\t\t\t\tlet latitude = null;\r\n\t\t\t\tlet longitude = null;\r\n\r\n\t\t\t\tfileInfo?.info1 ? info1 = fileInfo?.info1 : info1 = \"\";\r\n\t\t\t\tfileInfo?.info2 ? info2 = fileInfo?.info2 : info2 = \"\";\r\n\t\t\t\tfileInfo?.info3 ? info3 = fileInfo?.info3 : info3 = \"\";\r\n\t\t\t\tfileInfo?.date ? date = fileInfo?.date : date = null;\r\n\t\t\t\tfileInfo?.latitude ? latitude = fileInfo?.latitude : latitude = null;\r\n\t\t\t\tfileInfo?.longitude ? longitude = fileInfo?.longitude : longitude = null;\r\n\t\t\t\tif (Array.isArray(CurrentImages)){\r\n\t\t\t\t\tCurrentImages.push( {url: `/vis.0/slideshow/${file.file}`, path: file.file, info1: info1, info2: info2, info3: info3, date: date, latitude: latitude, longitude: longitude, locationInfos: null} );\r\n\t\t\t\t}else{\r\n\t\t\t\t\tCurrentImages = [ {url: `/vis.0/slideshow/${file.file}`, path: file.file, info1: info1, info2: info2, info3: info3, date: date, latitude: latitude, longitude: longitude, locationInfos: null} ];\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t}\r\n\t\tHelper.ReportingInfo(\"Info\", \"Local\", `${CurrentImages.length} pictures found`, {JSON: JSON.stringify(CurrentImages.slice(0, 10))} );\r\n\t\treturn { success: true, picturecount: CurrentImages.length};\r\n\t}catch(err) {\r\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Local\", \"updatePictureList/List\");\r\n\t\treturn { success: false, picturecount: 0};\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAsC;AAoBtC,IAAI;AACJ,IAAI;AAEJ,0BAAiC,QAAoD;AACpF,MAAG;AACF,QAAI,cAAc,WAAW,GAAE;AAC9B,YAAM,kBAAkB;AAAA;AAEzB,QAAI,cAAc,WAAW,GAAE;AAC9B,UAAI,CAAC,cAAa;AACjB,uBAAe,cAAc;AAAA,aACvB;AACN,YAAI,cAAc,QAAQ,kBAAkB,cAAc,SAAS,GAAE;AACpE,yBAAe,cAAc;AAAA,eACvB;AACN,yBAAe,cAAc,cAAc,QAAQ,gBAAgB;AAAA;AAAA;AAGrE,aAAO;AAAA;AAER,WAAO;AAAA,WACD,KAAN;AACA,WAAO,eAAe,KAAc,iBAAiB,SAAS;AAC9D,WAAO;AAAA;AAAA;AAIT,iCAAwC,QAA6D;AACpG,MAAG;AACF,oBAAgB;AAChB,UAAM,oBAAoB,MAAO,OAAO,QAAQ,aAAa,SAAS;AACtE,QAAI,CAAE,mBAAkB,SAAS,IAAG;AACnC,aAAO,eAAe,MAAM,+BAA+B,SAAS,0BAAyB,IAAI;AACjG,aAAO,EAAE,SAAS,OAAO,cAAc;AAAA,WACjC;AACN,YAAM,QAAQ,IAAI,kBAAkB,IAAI,OAAM,SAAQ;AACrD,cAAM,mBAAmB,MAAM,OAAO,QAAQ,cAAc,SAAS,cAAc,KAAK;AACxF,cAAM,WAAW,MAAM,uCAAsB,QAAQ,iBAAiB;AACtE,YAAI,OAAO,OAAO,QAAQ;AAC1B,YAAI,OAAO;AACX,YAAI,WAAW;AACf,YAAI,YAAY;AAEhB,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,QAAO,OAAO,qCAAU,OAAO,OAAO;AAChD,8CAAU,YAAW,WAAW,qCAAU,WAAW,WAAW;AAChE,8CAAU,aAAY,YAAY,qCAAU,YAAY,YAAY;AACpE,YAAI,MAAM,QAAQ,gBAAe;AAChC,wBAAc,KAAM,EAAC,KAAK,oBAAoB,KAAK,QAAQ,MAAM,KAAK,MAAM,OAAc,OAAc,OAAc,MAAY,UAAoB,WAAsB,eAAe;AAAA,eACvL;AACJ,0BAAgB,CAAE,EAAC,KAAK,oBAAoB,KAAK,QAAQ,MAAM,KAAK,MAAM,OAAc,OAAc,OAAc,MAAY,UAAoB,WAAsB,eAAe;AAAA;AAAA;AAAA;AAI5L,WAAO,cAAc,QAAQ,SAAS,GAAG,cAAc,yBAAyB,EAAC,MAAM,KAAK,UAAU,cAAc,MAAM,GAAG;AAC7H,WAAO,EAAE,SAAS,MAAM,cAAc,cAAc;AAAA,WAC9C,KAAN;AACA,WAAO,eAAe,KAAc,iBAAiB,SAAS;AAC9D,WAAO,EAAE,SAAS,OAAO,cAAc;AAAA;AAAA;",
  "names": []
}
