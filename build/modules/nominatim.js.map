{
  "version": 3,
  "sources": ["../../src/modules/nominatim.ts"],
  "sourcesContent": ["import { GlobalHelper } from \"./global-helper\";\r\nimport nominatim from \"nominatim-client\";\r\nimport { devNull } from \"node:os\";\r\n\r\nexport interface locationInfos {\r\n\tcountry: string | null;\r\n\tstate: string | null;\r\n\tcounty: string | null;\r\n\tcity: string | null;\r\n\tdisplay_name: string | null;\r\n}\r\n\r\nexport async function getLocationInfos(Helper: GlobalHelper, lat: number, long: number): Promise<locationInfos | null> {\r\n\ttry {\r\n\t\tconst locationInfos = await downloadLocationInfos(Helper, lat, long);\r\n\t\tlet result = null;\r\n\r\n\t\tif (locationInfos) {\r\n\t\t\tresult = {\r\n\t\t\t\tcountry: locationInfos.address && locationInfos.address.country ? locationInfos.address.country : null,\r\n\t\t\t\tstate: locationInfos.address && locationInfos.address.state ? locationInfos.address.state : null,\r\n\t\t\t\tcounty: locationInfos.address && locationInfos.address.county ? locationInfos.address.county : null,\r\n\t\t\t\tcity: locationInfos.address && locationInfos.address.city ? locationInfos.address.city : null,\r\n\t\t\t\tdisplay_name: locationInfos.display_name ? locationInfos.display_name: null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t} catch (error) {\r\n\t\tHelper.ReportingError(error as Error, \"Unknown Error\", \"exifr\", \"getLocationInfos\");\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nasync function downloadLocationInfos(Helper: GlobalHelper, lat: number, long: number): Promise<any | null> {\r\n\ttry {\r\n\t\tconst client = nominatim.createClient({\r\n\t\t\tuseragent: \"ioBroker\",             // The name of your application\r\n\t\t\treferer: 'https://nominatim.openstreetmap.org',  // The referer link\r\n\t\t});\r\n\r\n\t\tconst query = {\r\n\t\t\tlat: lat,\r\n\t\t\tlon: long,\r\n\t\t\tzoom: 18,\r\n\t\t\t\"accept-language\": Helper.getLanguage()\r\n\t\t};\r\n\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tclient.reverse(query).then((result) => {\r\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `[downloadLocationInfos]: ${JSON.stringify(result)}`);\r\n\t\t\t\tresolve(result);\r\n\t\t\t});\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tHelper.ReportingError(error as Error, \"Unknown Error\", \"exifr\", \"downloadLocationInfos\");\r\n\t\treturn null;\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA,8BAAsB;AAWtB,gCAAuC,QAAsB,KAAa,MAA6C;AACtH,MAAI;AACH,UAAM,gBAAgB,MAAM,sBAAsB,QAAQ,KAAK;AAC/D,QAAI,SAAS;AAEb,QAAI,eAAe;AAClB,eAAS;AAAA,QACR,SAAS,cAAc,WAAW,cAAc,QAAQ,UAAU,cAAc,QAAQ,UAAU;AAAA,QAClG,OAAO,cAAc,WAAW,cAAc,QAAQ,QAAQ,cAAc,QAAQ,QAAQ;AAAA,QAC5F,QAAQ,cAAc,WAAW,cAAc,QAAQ,SAAS,cAAc,QAAQ,SAAS;AAAA,QAC/F,MAAM,cAAc,WAAW,cAAc,QAAQ,OAAO,cAAc,QAAQ,OAAO;AAAA,QACzF,cAAc,cAAc,eAAe,cAAc,eAAc;AAAA;AAAA;AAIzE,WAAO;AAAA,WAEC,OAAP;AACD,WAAO,eAAe,OAAgB,iBAAiB,SAAS;AAChE,WAAO;AAAA;AAAA;AAIT,qCAAqC,QAAsB,KAAa,MAAmC;AAC1G,MAAI;AACH,UAAM,SAAS,gCAAU,aAAa;AAAA,MACrC,WAAW;AAAA,MACX,SAAS;AAAA;AAGV,UAAM,QAAQ;AAAA,MACb;AAAA,MACA,KAAK;AAAA,MACL,MAAM;AAAA,MACN,mBAAmB,OAAO;AAAA;AAG3B,WAAO,IAAI,QAAQ,aAAW;AAC7B,aAAO,QAAQ,OAAO,KAAK,CAAC,WAAW;AACtC,eAAO,cAAc,SAAS,WAAW,4BAA4B,KAAK,UAAU;AACpF,gBAAQ;AAAA;AAAA;AAAA,WAGF,OAAP;AACD,WAAO,eAAe,OAAgB,iBAAiB,SAAS;AAChE,WAAO;AAAA;AAAA;",
  "names": []
}
