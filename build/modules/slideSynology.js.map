{
  "version": 3,
  "sources": ["../../src/modules/slideSynology.ts"],
  "sourcesContent": ["import { GlobalHelper } from \"./global-helper\";\nimport axios, { AxiosError } from \"axios\";\nimport { wrapper } from \"axios-cookiejar-support\"\nimport { CookieJar } from \"tough-cookie\";\n\nimport * as path from \"path\";\n\nexport interface SynoPicture{\n\turl: string,\n\tpath: string,\n\tinfo1: string,\n\tinfo2: string,\n\tinfo3: string,\n\tdate: Date | null,\n\tx: number,\n\ty: number\n}\n\nexport interface SynoPictureListUpdateResult{\n\tsuccess: boolean;\n\tpicturecount: number;\n}\n\n// Internal use for iterating folders\ninterface SynoFolders{\n\tid: number,\n\tname: string,\n\tparent: number\n}\nconst synoFolders: SynoFolders[] =[];\n\n// Connection State for internal use\nlet synoConnectionState  = false;\n// Synology Login Token\nlet synoToken = \"\";\n// Authentication Cookie\nconst AxiosJar = new CookieJar();\n// Axios instance with options\nconst synoConnection = wrapper(axios.create({ withCredentials: true, jar: AxiosJar} ));\n\n// Output of Axios Request or Response\n/*\nsynoConnection.interceptors.request.use( x =>{\n\tconsole.log(x);\n\treturn x;\n} );\nsynoConnection.interceptors.response.use (x =>{\n\tconsole.log(x);\n\treturn x;\n} );\n*/\n\nlet CurrentImages: SynoPicture[];\nlet CurrentImage: SynoPicture;\nlet CurrentPicture: SynoPicture;\n\nexport async function getPicture(Helper: GlobalHelper): Promise<SynoPicture | null>{\n\ttry{\n\t\tif (!CurrentPicture){\n\t\t\tawait getPicturePrefetch(Helper);\n\t\t}\n\t\tconst CurrentPictureResult = CurrentPicture;\n\t\tgetPicturePrefetch(Helper);\n\t\treturn CurrentPictureResult;\n\t} catch (err){\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicture\");\n\t\treturn null;\n\t}\n}\n\nexport async function getPicturePrefetch(Helper: GlobalHelper): Promise<void> {\n\t// Select Image from list\n\ttry{\n\t\tif (CurrentImages.length !== 0){\n\t\t\tif (!CurrentImage){\n\t\t\t\tCurrentImage = CurrentImages[0];\n\t\t\t} else {\n\t\t\t\tif (CurrentImages.indexOf(CurrentImage) === CurrentImages.length - 1){\n\t\t\t\t\tCurrentImage = CurrentImages[0];\n\t\t\t\t} else {\n\t\t\t\t\tCurrentImage = CurrentImages[CurrentImages.indexOf(CurrentImage) + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}catch(err){\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicturePrefetch/Select\");\n\t}\n\t// Retrieve Image\n\ttry{\n\t\tawait loginSyno(Helper);\n\t\tlet synURL = \"\";\n\t\tif (Helper.Adapter.config.syno_version === 0){\n\t\t\tsynURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/entry.cgi?api=SYNO.FotoTeam.Download&method=download&version=1&unit_id=%5B${CurrentImage.path}%5D&force_download=true&SynoToken=${synoToken}`;\n\t\t} else {\n\t\t\tsynURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/download.php?api=SYNO.PhotoStation.Download&method=getphoto&version=1&id=${CurrentImage.path}&download=true`;\n\t\t}\n\t\tconst synResult = await synoConnection.get<any>(synURL,{responseType: \"arraybuffer\"});\n\t\tconst PicContentB64 = synResult.data.toString(\"base64\");\n\t\tCurrentPicture = { ...CurrentImage, url: `data:image/jpeg;base64,${PicContentB64}` };\n\t} catch (err){\n\t\tif ((err as AxiosError).response?.status === 502){\n\t\t\tHelper.ReportingError(err as Error, `Unknown Error downloading Picture ${CurrentImage.path}`, \"Synology\", \"getPicturePrefetch/Retrieve\", \"\", false);\n\t\t}else{\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicturePrefetch/Retrieve\");\n\t\t}\n\t}\n}\n\nexport async function updatePictureList(Helper: GlobalHelper): Promise<SynoPictureListUpdateResult> {\n\tCurrentImages = [];\n\tawait loginSyno(Helper);\n\tconst CurrentImageList: SynoPicture[] = [ { path: \"0\", url: \"\", info1: \"\", info2: \"\", info3: \"\", date: null, x: 0, y: 0} ];\n\tif (synoConnectionState === true){\n\t\t// Retrieve complete list of pictures\n\t\ttry{\n\t\t\tif (Helper.Adapter.config.syno_version === 0){\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `Start iterating folders`);\n\t\t\t\tsynoFolders.length = 0;\n\t\t\t\tawait synoGetFolders(Helper, 1);\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `${synoFolders.length} folders found, receiving pictures`);\n\t\t\t\tfor(const synoFolder of synoFolders){\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `Getting pictures of Synofolder ID ${synoFolder.id} with name ${synoFolder.name}`);\n\t\t\t\t\tlet synEndOfFiles = false;\n\t\t\t\t\tlet synOffset = 0;\n\t\t\t\t\twhile (synEndOfFiles === false){\n\t\t\t\t\t\tconst synURL = `http://${Helper.Adapter.config.syno_path}/webapi/entry.cgi?api=SYNO.FotoTeam.Browse.Item&method=list&version=1&limit=500&item_type=%5B0%5D&additional=%5B%22description%22%2C%22orientation%22%2C%22tag%22%2C%22resolution%22%5D&offset=${synOffset}&SynoToken=${synoToken}&folder_id=${synoFolder.id}`;\n\t\t\t\t\t\tconst synResult = await (synoConnection.get<any>(synURL));\n\t\t\t\t\t\tif (synResult.data[\"success\"] === true && Array.isArray(synResult.data[\"data\"][\"list\"])){\n\t\t\t\t\t\t\tif (synResult.data[\"data\"][\"list\"].length === 0){\n\t\t\t\t\t\t\t\tsynEndOfFiles = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `Synofolder ${synoFolder.id} has ${synResult.data[\"data\"][\"list\"].length} pictures`);\n\t\t\t\t\t\t\t\tsynResult.data[\"data\"][\"list\"].forEach(element => {\n\t\t\t\t\t\t\t\t\tlet PictureDate: Date | null = null;\n\t\t\t\t\t\t\t\t\tif (element.time){\n\t\t\t\t\t\t\t\t\t\tPictureDate = new Date(element.time);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tCurrentImageList.push( {path: element.id, url: \"\", info1: element.description, info2: \"\", info3: element.filename, date: PictureDate, x: element.additional.resolution.height, y: element.additional.resolution.width } );\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsynOffset = synOffset + 500;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tHelper.ReportingError(null, \"Error getting pictures from Synology\", \"Synology\", \"updatePictureList/List\", JSON.stringify(synResult.data), false);\n\t\t\t\t\t\t\treturn { success: false, picturecount: 0 };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet synEndOfFiles = false;\n\t\t\t\tlet synOffset = 0;\n\t\t\t\twhile (synEndOfFiles === false){\n\t\t\t\t\tconst synURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/photo.php?api=SYNO.PhotoStation.Photo&method=list&version=1&limit=500&type=photo&offset=${synOffset}`;\n\t\t\t\t\tconst synResult = await (synoConnection.get<any>(synURL));\n\t\t\t\t\tif (synResult.data[\"success\"] === true && Array.isArray(synResult.data[\"data\"][\"items\"])){\n\t\t\t\t\t\tsynResult.data[\"data\"][\"items\"].forEach(element => {\n\t\t\t\t\t\t\tlet PictureDate: Date | null = null;\n\t\t\t\t\t\t\tif (element.info.takendate){\n\t\t\t\t\t\t\t\tPictureDate = new Date(element.info.takendate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tCurrentImageList.push( {path: element.id, url: \"\", info1: element.info.title, info2: element.info.description, info3: element.info.name, date: PictureDate, x: element.info.resolutionx, y: element.info.resolutiony } );\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (synResult.data[\"data\"][\"total\"] === synResult.data[\"data\"][\"offset\"]){\n\t\t\t\t\t\t\tsynEndOfFiles = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsynOffset = synResult.data[\"data\"][\"offset\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tHelper.ReportingError(null, \"Error getting pictures from Synology\", \"Synology\", \"updatePictureList/List\", JSON.stringify(synResult.data), false);\n\t\t\t\t\t\treturn { success: false, picturecount: 0 };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `${CurrentImageList.length} pictures found before filtering`);\n\t\t} catch (err){\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"updatePictureList/List\");\n\t\t\treturn { success: false, picturecount: 0 };\n\t\t}\n\t\t// Filter pictures\n\t\ttry{\n\t\t\t// Filter for JPEG or JPG files\n\t\t\tconst CurrentImageListFilter1 = CurrentImageList.filter(function(element){\n\t\t\t\tif (path.extname(element.info3).toLowerCase() === \".jpg\" || path.extname(element.info3).toLowerCase() === \".jpeg\"){\n\t\t\t\t\treturn element;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Filter for orientation\n\t\t\tif (Helper.Adapter.config.syno_format > 0){\n\t\t\t\tCurrentImageListFilter1.filter(function(element){\n\t\t\t\t\tif ((Helper.Adapter.config.syno_format === 1 && element.x > element.y) === true){\n\t\t\t\t\t\tif (Array.isArray(CurrentImages)){\n\t\t\t\t\t\t\tCurrentImages.push(element);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tCurrentImages = [ element ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((Helper.Adapter.config.syno_format === 2 && element.y > element.x) === true){\n\t\t\t\t\t\tif (Array.isArray(CurrentImages)){\n\t\t\t\t\t\t\tCurrentImages.push(element);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tCurrentImages = [ element ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tCurrentImages = CurrentImageListFilter1;\n\t\t\t}\n\t\t\t// Sorting\n\t\t\tswitch (Helper.Adapter.config.syno_order){\n\t\t\t\tcase 0:\n\t\t\t\t\t// Takendate\n\t\t\t\t\tCurrentImages = await sortByKey(CurrentImages, \"date\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\t// Filename\n\t\t\t\t\tCurrentImages = await sortByKey(CurrentImages, \"info3\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t// Random\n\t\t\t\t\t// See https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\t\t\t\t\tlet currentIndex = CurrentImages.length, temporaryValue: SynoPicture, randomIndex: number;\n\t\t\t\t\t// While there remain elements to shuffle...\n\t\t\t\t\twhile (0 !== currentIndex) {\n\t\t\t\t\t\t// Pick a remaining element...\n\t\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\t\tcurrentIndex -= 1;\n\t\t\t\t\t\t// And swap it with the current element.\n\t\t\t\t\t\ttemporaryValue = CurrentImages[currentIndex];\n\t\t\t\t\t\tCurrentImages[currentIndex] = CurrentImages[randomIndex];\n\t\t\t\t\t\tCurrentImages[randomIndex] = temporaryValue;\n\t\t\t\t\t}\n\t\t\t}\n\t\t} catch (err){\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"updatePictureList/Filter\");\n\t\t\treturn { success: false, picturecount: 0 };\n\t\t}\n\t\t// Images found ?\n\t\tif (!(CurrentImages.length > 0)){\n\t\t\tHelper.ReportingError(null, \"No pictures found\", \"Synology\", \"updatePictureList\",\"\", false);\n\t\t\treturn { success: false, picturecount: 0 };\n\t\t}else{\n\t\t\tHelper.ReportingInfo(\"Info\", \"Synology\", `${CurrentImages.length} pictures found`, {JSON: JSON.stringify(CurrentImages.slice(0, 99))} );\n\t\t\treturn { success: true, picturecount: CurrentImages.length };\n\t\t}\n\t} else{\n\t\treturn { success: false, picturecount: 0 };\n\t}\n}\n\nasync function loginSyno(Helper: GlobalHelper): Promise<boolean>{\n\t// Check parameters\n\ttry{\n\t\tif (Helper.Adapter.config.syno_path === \"\" || Helper.Adapter.config.syno_path === null){\n\t\t\tHelper.Adapter.log.error(\"No name or IP address of Synology PhotoStation configured\");\n\t\t\treturn false;\n\t\t}\n\t\tif (Helper.Adapter.config.syno_username === \"\" || Helper.Adapter.config.syno_username === null){\n\t\t\tHelper.Adapter.log.error(\"No user name for Synology PhotoStation configured\");\n\t\t\treturn false;\n\t\t}\n\t\tif (Helper.Adapter.config.syno_userpass === \"\" || Helper.Adapter.config.syno_userpass === null){\n\t\t\tHelper.Adapter.log.error(\"No user name for Synology PhotoStation configured\");\n\t\t\treturn false;\n\t\t}\n\t} catch (err){\n\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"loginSyno/CheckParameters\");\n\t\tsynoConnectionState = false;\n\t\treturn false;\n\t}\n\t// Run connection check\n\tif (await synoCheckConnection(Helper) === true){\n\t\treturn true;\n\t} else{\n\t\t// Run Login\n\t\ttry{\n\t\t\tif (Helper.Adapter.config.syno_version === 0){\n\t\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/webapi/entry.cgi?api=SYNO.API.Auth&version=6&method=login&account=${Helper.Adapter.config.syno_username}&passwd=${encodeURIComponent(Helper.Adapter.config.syno_userpass)}&enable_syno_token=yes`;\n \t\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\n\t\t\t\tif (synResult.data && synResult.data[\"data\"] && synResult.data[\"data\"][\"sid\"] && synResult.data[\"success\"] === true){\n\t\t\t\t\tsynoToken = synResult.data[\"data\"][\"synotoken\"];\n\t\t\t\t\tsynoConnectionState = true;\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology Login successfull\");\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\tHelper.Adapter.log.error(\"Connection failure to Synology PhotoStation\");\n\t\t\t\t\tsynoConnectionState = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else{\n\t\t\t\tconst synResult = await (synoConnection.get<any>(`http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.php?api=SYNO.PhotoStation.Auth&method=login&version=1&username=${Helper.Adapter.config.syno_username}&password=${encodeURIComponent(Helper.Adapter.config.syno_userpass)}`));\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology result data\", { result: synResult } );\n\t\t\t\tif (synResult.data && synResult.data[\"data\"] && synResult.data[\"data\"][\"username\"] === Helper.Adapter.config.syno_username){\n\t\t\t\t\tsynoConnectionState = true;\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology Login successfull\");\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\tHelper.Adapter.log.error(\"Connection failure to Synology PhotoStation\");\n\t\t\t\t\tsynoConnectionState = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err){\n\t\t\tif ((err as AxiosError).response?.status === 403){\n\t\t\t\tsynoConnectionState = false;\n\t\t\t\treturn false;\n\t\t\t}else if ((err as AxiosError).isAxiosError === true){\n\t\t\t\tHelper.Adapter.log.error(\"No connection to Synology PhotoStation, misconfigured name or IP address\");\n\t\t\t\tsynoConnectionState = false;\n\t\t\t\treturn false;\n\t\t\t}else{\n\t\t\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"loginSyno/Login\");\n\t\t\t\tsynoConnectionState = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nasync function synoCheckConnection(Helper: GlobalHelper): Promise<boolean>{\n\ttry{\n\t\tif (Helper.Adapter.config.syno_version === 0){\n\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.cgi?api=SYNO.Core.Desktop.Initdata&method=get_user_service&version=1&SynoToken=${synoToken}`;\n\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\n\t\t\tif (synResult.status === 200){\n\t\t\t\tif (synResult.data.data?.Session?.isLogined === true){\n\t\t\t\t\tsynoConnectionState = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\tsynoConnectionState = false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsynoConnectionState = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.php?api=SYNO.PhotoStation.Auth&method=checkauth&version=1`;\n\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\n\t\t\tif (synResult.status === 200){\n\t\t\t\tif (synResult.data.data?.username === Helper.Adapter.config.syno_username){\n\t\t\t\t\tsynoConnectionState = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\tsynoConnectionState = false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsynoConnectionState = false;\n\t\t\t}\n\t\t}\n\t}catch(err){\n\t\tif ((err as AxiosError).response?.status === 403){\n\t\t\tsynoConnectionState = false;\n\t\t\treturn false;\n\t\t}else if ((err as AxiosError).isAxiosError === true){\n\t\t\tHelper.Adapter.log.error(\"No connection to Synology PhotoStation, misconfigured name or IP address\");\n\t\t\tsynoConnectionState = false;\n\t\t\treturn false;\n\t\t}else{\n\t\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"synoCheckConnection\");\n\t\t\tsynoConnectionState = false;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n}\n\nasync function synoGetFolders(Helper: GlobalHelper, FolderID: number): Promise<boolean>{\n\ttry{\n\t\tlet synoEndOfFolders = false;\n\t\tlet synoOffset = 0;\n\t\twhile (synoEndOfFolders === false){\n\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/entry.cgi?api=SYNO.FotoTeam.Browse.Folder&method=list&version=1&id=${FolderID}&limit=500&offset=${synoOffset}&SynoToken=${synoToken}`;\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `Iterating folder id ${FolderID} `, {URL: synoURL} );\n\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", `Result iterating folder id ${FolderID}`, {JSON: JSON.stringify(synResult.data)} );\n\t\t\tif (synResult.data[\"success\"] === true && Array.isArray(synResult.data[\"data\"][\"list\"])){\n\t\t\t\tif (synResult.data[\"data\"][\"list\"].length === 0){\n\t\t\t\t\tsynoEndOfFolders = true;\n\t\t\t\t} else {\n\t\t\t\t\tfor (const element of synResult.data[\"data\"][\"list\"]) {\n\t\t\t\t\t\tsynoFolders.push({ id: element.id, name: element.name, parent: element.parent });\n\t\t\t\t\t\tawait synoGetFolders(Helper, element.id)\n\t\t\t\t\t}\n\t\t\t\t\tsynoOffset = synoOffset + 500;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tHelper.ReportingError(null, \"Error getting folders from Synology\", \"Synology\", \"synoGetFolders\", JSON.stringify(synResult.data), false);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t}\n\t\treturn true;\n\t}catch(err){\n\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"synoGetFolders\");\n\t\treturn false;\n\t}\n}\n\nasync function sortByKey(array: Array<any>, key: string): Promise<Array<any>> {\n\treturn array.sort(function(a: any, b: any) {\n\t\tconst x = a[key];\n\t\tconst y = b[key];\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t});\n}"],
  "mappings": "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",
  "names": ["axios"]
}
