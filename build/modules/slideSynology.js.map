{
  "version": 3,
  "sources": ["../../src/modules/slideSynology.ts"],
  "sourcesContent": ["import { GlobalHelper } from \"./global-helper\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { wrapper } from \"axios-cookiejar-support\"\r\nimport { CookieJar } from \"tough-cookie\";\r\nimport * as nominatim from \"./nominatim\"\r\n\r\nimport * as path from \"path\";\r\n\r\nexport interface SynoPicture{\r\n\turl: string,\r\n\tpath: string,\r\n\tinfo1: string,\r\n\tinfo2: string,\r\n\tinfo3: string,\r\n\tdate: Date | null,\r\n\tx: number,\r\n\ty: number,\r\n\tlatitude: number | null,\r\n\tlongitude: number | null,\r\n\tlocationInfos: nominatim.locationInfos | null\r\n}\r\n\r\nexport interface SynoPictureListUpdateResult{\r\n\tsuccess: boolean;\r\n\tpicturecount: number;\r\n}\r\n\r\n// Connection State for internal use\r\nlet synoConnectionState  = false;\r\n// Synology Login Token\r\nlet synoToken = \"\";\r\n// Authentication Cookie\r\nconst AxiosJar = new CookieJar();\r\n// Axios instance with options\r\nconst synoConnection = wrapper(axios.create({ withCredentials: true, jar: AxiosJar} ));\r\n\r\n// Output of Axios Request or Response\r\n/*\r\nsynoConnection.interceptors.request.use( x =>{\r\n\tconsole.log(x);\r\n\treturn x;\r\n} );\r\nsynoConnection.interceptors.response.use (x =>{\r\n\tconsole.log(x);\r\n\treturn x;\r\n} );\r\n*/\r\n\r\nlet CurrentImages: SynoPicture[];\r\nlet CurrentImage: SynoPicture;\r\nlet CurrentPicture: SynoPicture;\r\n\r\nexport async function getPicture(Helper: GlobalHelper): Promise<SynoPicture | null>{\r\n\ttry{\r\n\t\tif (!CurrentPicture){\r\n\t\t\tawait getPicturePrefetch(Helper);\r\n\t\t}\r\n\t\tconst CurrentPictureResult = CurrentPicture;\r\n\t\tgetPicturePrefetch(Helper);\r\n\t\treturn CurrentPictureResult;\r\n\t} catch (err){\r\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicture\");\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport async function getPicturePrefetch(Helper: GlobalHelper): Promise<void> {\r\n\t// Select Image from list\r\n\ttry{\r\n\t\tif (CurrentImages.length !== 0){\r\n\t\t\tif (!CurrentImage){\r\n\t\t\t\tCurrentImage = CurrentImages[0];\r\n\t\t\t} else {\r\n\t\t\t\tif (CurrentImages.indexOf(CurrentImage) === CurrentImages.length - 1){\r\n\t\t\t\t\tCurrentImage = CurrentImages[0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tCurrentImage = CurrentImages[CurrentImages.indexOf(CurrentImage) + 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}catch(err){\r\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicturePrefetch/Select\");\r\n\t}\r\n\t// Retrieve Image\r\n\ttry{\r\n\t\tawait loginSyno(Helper);\r\n\t\tlet synURL = \"\";\r\n\t\tif (Helper.Adapter.config.syno_version === 0){\r\n\t\t\tsynURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/entry.cgi?api=SYNO.FotoTeam.Download&method=download&version=1&unit_id=%5B${CurrentImage.path}%5D&force_download=true&SynoToken=${synoToken}`;\r\n\t\t} else {\r\n\t\t\tsynURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/download.php?api=SYNO.PhotoStation.Download&method=getphoto&version=1&id=${CurrentImage.path}&download=true`;\r\n\t\t}\r\n\t\tconst synResult = await synoConnection.get<any>(synURL,{responseType: \"arraybuffer\"});\r\n\t\tconst PicContentB64 = synResult.data.toString(\"base64\");\r\n\t\tCurrentPicture = { ...CurrentImage, url: `data:image/jpeg;base64,${PicContentB64}` };\r\n\t} catch (err){\r\n\t\tif ((err as AxiosError).response?.status === 502){\r\n\t\t\tHelper.ReportingError(err as Error, `Unknown Error downloading Picture ${CurrentImage.path}`, \"Synology\", \"getPicturePrefetch/Retrieve\", \"\", false);\r\n\t\t}else{\r\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"getPicturePrefetch/Retrieve\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport async function updatePictureList(Helper: GlobalHelper): Promise<SynoPictureListUpdateResult> {\r\n\tCurrentImages = [];\r\n\tawait loginSyno(Helper);\r\n\tconst CurrentImageList: SynoPicture[] = [ { path: \"0\", url: \"\", info1: \"\", info2: \"\", info3: \"\", date: null, x: 0, y: 0, latitude: null, longitude: null, locationInfos: null} ];\r\n\tif (synoConnectionState === true){\r\n\t\t// Retrieve complete list of pictures\r\n\t\ttry{\r\n\t\t\tlet synEndOfFiles = false;\r\n\t\t\tlet synOffset = 0;\r\n\t\t\twhile (synEndOfFiles === false){\r\n\t\t\t\tif (Helper.Adapter.config.syno_version === 0){\r\n\t\t\t\t\tlet synURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/entry.cgi?api=SYNO.FotoTeam.Browse.Item&method=list_with_filter&version=1&limit=500&item_type=%5B0%5D&additional=%5B%22description%22%2C%22orientation%22%2C%22tag%22%2C%22resolution%22%5D&offset=${synOffset}&SynoToken=${synoToken}`;\r\n\t\t\t\t\tswitch (Helper.Adapter.config.syno_order){\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t//Filename\r\n\t\t\t\t\t\t\tsynURL = synURL + \"&sort_by=filename&sort_direction=asc\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t//Takendate\r\n\t\t\t\t\t\t\tsynURL = synURL + \"&sort_by=takentime\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst synResult = await (synoConnection.get<any>(synURL));\r\n\t\t\t\t\tif (synResult.data[\"success\"] === true && Array.isArray(synResult.data[\"data\"][\"list\"])){\r\n\t\t\t\t\t\tif (synResult.data[\"data\"][\"list\"].length === 0){\r\n\t\t\t\t\t\t\tsynEndOfFiles = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsynResult.data[\"data\"][\"list\"].forEach(element => {\r\n\t\t\t\t\t\t\t\tlet PictureDate: Date | null = null;\r\n\t\t\t\t\t\t\t\tif (element.time){\r\n\t\t\t\t\t\t\t\t\tPictureDate = new Date(element.time);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tCurrentImageList.push( {path: element.id, url: \"\", info1: element.description, info2: \"\", info3: element.filename, date: PictureDate, x: element.additional.resolution.height, y: element.additional.resolution.width, latitude: null, longitude: null, locationInfos: null } );\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tsynOffset = synOffset + 500;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tHelper.ReportingError(null, \"Error getting pictures from Synology\", \"Synology\", \"updatePictureList/List\", JSON.stringify(synResult.data), false);\r\n\t\t\t\t\t\treturn { success: false, picturecount: 0 };\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet synURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/photo.php?api=SYNO.PhotoStation.Photo&method=list&version=1&limit=500&type=photo&offset=${synOffset}`;\r\n\t\t\t\t\tswitch (Helper.Adapter.config.syno_order){\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t//Filename\r\n\t\t\t\t\t\t\tsynURL = synURL + \"&sort_by=filename\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t//Createdate\r\n\t\t\t\t\t\t\tsynURL = synURL + \"&sort_by=createdate\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t//Takendate\r\n\t\t\t\t\t\t\tsynURL = synURL + \"&sort_by=takendate\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst synResult = await (synoConnection.get<any>(synURL));\r\n\t\t\t\t\tif (synResult.data[\"success\"] === true && Array.isArray(synResult.data[\"data\"][\"items\"])){\r\n\t\t\t\t\t\tsynResult.data[\"data\"][\"items\"].forEach(element => {\r\n\t\t\t\t\t\t\tlet PictureDate: Date | null = null;\r\n\t\t\t\t\t\t\tif (element.info.takendate){\r\n\t\t\t\t\t\t\t\tPictureDate = new Date(element.info.takendate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tCurrentImageList.push( {path: element.id, url: \"\", info1: element.info.title, info2: element.info.description, info3: element.info.name, date: PictureDate, x: element.info.resolutionx, y: element.info.resolutiony, latitude: null, longitude: null, locationInfos: null } );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (synResult.data[\"data\"][\"total\"] === synResult.data[\"data\"][\"offset\"]){\r\n\t\t\t\t\t\t\tsynEndOfFiles = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsynOffset = synResult.data[\"data\"][\"offset\"];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tHelper.ReportingError(null, \"Error getting pictures from Synology\", \"Synology\", \"updatePictureList/List\", JSON.stringify(synResult.data), false);\r\n\t\t\t\t\t\treturn { success: false, picturecount: 0 };\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err){\r\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"updatePictureList/List\");\r\n\t\t\treturn { success: false, picturecount: 0 };\r\n\t\t}\r\n\t\t// Filter pictures\r\n\t\ttry{\r\n\t\t\t// Filter for JPEG or JPG files\r\n\t\t\tconst CurrentImageListFilter1 = CurrentImageList.filter(function(element){\r\n\t\t\t\tif (path.extname(element.info3).toLowerCase() === \".jpg\" || path.extname(element.info3).toLowerCase() === \".jpeg\"){\r\n\t\t\t\t\treturn element;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Filter for orientation\r\n\t\t\tif (Helper.Adapter.config.syno_format > 0){\r\n\t\t\t\tCurrentImageListFilter1.filter(function(element){\r\n\t\t\t\t\tif ((Helper.Adapter.config.syno_format === 1 && element.x > element.y) === true){\r\n\t\t\t\t\t\tif (Array.isArray(CurrentImages)){\r\n\t\t\t\t\t\t\tCurrentImages.push(element);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tCurrentImages = [ element ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((Helper.Adapter.config.syno_format === 2 && element.y > element.x) === true){\r\n\t\t\t\t\t\tif (Array.isArray(CurrentImages)){\r\n\t\t\t\t\t\t\tCurrentImages.push(element);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tCurrentImages = [ element ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tCurrentImages = CurrentImageListFilter1;\r\n\t\t\t}\r\n\t\t\t// Random order ?\r\n\t\t\tif (Helper.Adapter.config.syno_order === 3){\r\n\t\t\t\t// See https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n\t\t\t\tlet currentIndex = CurrentImages.length, temporaryValue: SynoPicture, randomIndex: number;\r\n\t\t\t\t// While there remain elements to shuffle...\r\n\t\t\t\twhile (0 !== currentIndex) {\r\n\t\t\t\t\t// Pick a remaining element...\r\n\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\t\t\tcurrentIndex -= 1;\r\n\t\t\t\t\t// And swap it with the current element.\r\n\t\t\t\t\ttemporaryValue = CurrentImages[currentIndex];\r\n\t\t\t\t\tCurrentImages[currentIndex] = CurrentImages[randomIndex];\r\n\t\t\t\t\tCurrentImages[randomIndex] = temporaryValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err){\r\n\t\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Synology\", \"updatePictureList/Filter\");\r\n\t\t\treturn { success: false, picturecount: 0 };\r\n\t\t}\r\n\t\t// Images found ?\r\n\t\tif (!(CurrentImages.length > 0)){\r\n\t\t\tHelper.ReportingError(null, \"No pictures found\", \"Synology\", \"updatePictureList\",\"\", false);\r\n\t\t\treturn { success: false, picturecount: 0 };\r\n\t\t}else{\r\n\t\t\tHelper.ReportingInfo(\"Info\", \"Synology\", `${CurrentImages.length} pictures found`, {JSON: JSON.stringify(CurrentImages.slice(0, 99))} );\r\n\t\t\treturn { success: true, picturecount: CurrentImages.length };\r\n\t\t}\r\n\t} else{\r\n\t\treturn { success: false, picturecount: 0 };\r\n\t}\r\n}\r\n\r\nasync function loginSyno(Helper: GlobalHelper): Promise<boolean>{\r\n\t// Check parameters\r\n\ttry{\r\n\t\tif (Helper.Adapter.config.syno_path === \"\" || Helper.Adapter.config.syno_path === null){\r\n\t\t\tHelper.Adapter.log.error(\"No name or IP address of Synology PhotoStation configured\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (Helper.Adapter.config.syno_username === \"\" || Helper.Adapter.config.syno_username === null){\r\n\t\t\tHelper.Adapter.log.error(\"No user name for Synology PhotoStation configured\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (Helper.Adapter.config.syno_userpass === \"\" || Helper.Adapter.config.syno_userpass === null){\r\n\t\t\tHelper.Adapter.log.error(\"No user name for Synology PhotoStation configured\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} catch (err){\r\n\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"loginSyno/CheckParameters\");\r\n\t\tsynoConnectionState = false;\r\n\t\treturn false;\r\n\t}\r\n\t// Run connection check\r\n\tif (await synoCheckConnection(Helper) === true){\r\n\t\treturn true;\r\n\t} else{\r\n\t\t// Run Login\r\n\t\ttry{\r\n\t\t\tif (Helper.Adapter.config.syno_version === 0){\r\n\t\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/entry.cgi?api=SYNO.API.Auth&version=6&method=login&account=${Helper.Adapter.config.syno_username}&passwd=${encodeURIComponent(Helper.Adapter.config.syno_userpass)}&enable_syno_token=yes`;\r\n \t\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\r\n\t\t\t\tif (synResult.data && synResult.data[\"data\"] && synResult.data[\"data\"][\"sid\"] && synResult.data[\"success\"] === true){\r\n\t\t\t\t\tsynoToken = synResult.data[\"data\"][\"synotoken\"];\r\n\t\t\t\t\tsynoConnectionState = true;\r\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology Login successfull\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tHelper.Adapter.log.error(\"Connection failure to Synology PhotoStation\");\r\n\t\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else{\r\n\t\t\t\tconst synResult = await (synoConnection.get<any>(`http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.php?api=SYNO.PhotoStation.Auth&method=login&version=1&username=${Helper.Adapter.config.syno_username}&password=${encodeURIComponent(Helper.Adapter.config.syno_userpass)}`));\r\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology result data\", { result: synResult } );\r\n\t\t\t\tif (synResult.data && synResult.data[\"data\"] && synResult.data[\"data\"][\"username\"] === Helper.Adapter.config.syno_username){\r\n\t\t\t\t\tsynoConnectionState = true;\r\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Synology\", \"Synology Login successfull\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tHelper.Adapter.log.error(\"Connection failure to Synology PhotoStation\");\r\n\t\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (err){\r\n\t\t\tif ((err as AxiosError).response?.status === 403){\r\n\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else if ((err as AxiosError).isAxiosError === true){\r\n\t\t\t\tHelper.Adapter.log.error(\"No connection to Synology PhotoStation, misconfigured name or IP address\");\r\n\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}else{\r\n\t\t\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"loginSyno/Login\");\r\n\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function synoCheckConnection(Helper: GlobalHelper): Promise<boolean>{\r\n\ttry{\r\n\t\tif (Helper.Adapter.config.syno_version === 0){\r\n\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.cgi?api=SYNO.Core.Desktop.Initdata&method=get_user_service&version=1&SynoToken=${synoToken}`;\r\n\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\r\n\t\t\tif (synResult.status === 200){\r\n\t\t\t\tif (synResult.data.data?.Session?.isLogined === true){\r\n\t\t\t\t\tsynoConnectionState = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tsynoConnectionState = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst synoURL = `http://${Helper.Adapter.config.syno_path}/photo/webapi/auth.php?api=SYNO.PhotoStation.Auth&method=checkauth&version=1`;\r\n\t\t\tconst synResult = await (synoConnection.get<any>(synoURL));\r\n\t\t\tif (synResult.status === 200){\r\n\t\t\t\tif (synResult.data.data?.username === Helper.Adapter.config.syno_username){\r\n\t\t\t\t\tsynoConnectionState = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsynoConnectionState = false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tsynoConnectionState = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}catch(err){\r\n\t\tif ((err as AxiosError).response?.status === 403){\r\n\t\t\tsynoConnectionState = false;\r\n\t\t\treturn false;\r\n\t\t}else if ((err as AxiosError).isAxiosError === true){\r\n\t\t\tHelper.Adapter.log.error(\"No connection to Synology PhotoStation, misconfigured name or IP address\");\r\n\t\t\tsynoConnectionState = false;\r\n\t\t\treturn false;\r\n\t\t}else{\r\n\t\t\tHelper.ReportingError(err as Error, \"Unknown error\", \"Synology\", \"synoCheckConnection\");\r\n\t\t\tsynoConnectionState = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}"],
  "mappings": "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",
  "names": []
}
